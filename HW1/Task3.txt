#include <iostream>
using namespace std;
#include <omp.h>

int main() {
	 int a = 5;
	 int b = 3;
	 printf("Before first omp parallel: a = %d , b = %d\n", a, b);
	 omp_set_num_threads(2);
#pragma omp parallel private(a) firstprivate(b)
	{
		 printf("Current thread_num: %d\n", omp_get_thread_num());
		 a = a + omp_get_thread_num();
		 b = b + omp_get_thread_num();
		 printf("Inside first omp parallel: a = %d , b = %d , thread_num: %d\n", a, b, omp_get_thread_num());
	}
	printf("After first omp parallel: a = %d , b = %d\n", a, b);

	omp_set_num_threads(4);
#pragma omp parallel shared(a) private(b)
	{
		a = a - omp_get_thread_num();
		b = b - omp_get_thread_num();
		printf("Inside second omp parallel: a = %d , b = %d , thread_num: %d\n", a, b, omp_get_thread_num());
	}
	printf("After second omp parallel: a = %d , b = %d\n", a, b);
}