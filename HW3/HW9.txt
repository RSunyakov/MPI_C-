#include <omp.h>
#include <cstdio>
#include <cstdlib>
#include <limits>

#define ROWS 6
#define COLUMNS 8

using namespace std;

int HW9() {

    omp_set_dynamic(0);
    omp_set_num_threads(6);

    int d[ROWS][COLUMNS];

    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLUMNS; j++) {
            d[i][j] = rand();
            printf("%d ", d[i][j]);
        }
        printf("\n");
    }

    int max = numeric_limits<int>::min();
    int min = numeric_limits<int>::max();

#pragma omp parallel for
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLUMNS; j++) {
            if (d[i][j] > max) {
#pragma omp critical
                {
                    if (d[i][j] > max) {
                        max = d[i][j];
                    }
                }
            }
            if (d[i][j] < min) {
#pragma omp critical
                {
                    if (d[i][j] < min) {
                        min = d[i][j];
                    }
                }
            }
        }
    }
    printf("\n");
    printf("min: %d, max: %d\n", min, max);
}